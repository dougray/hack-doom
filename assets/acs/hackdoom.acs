#library "hackdoom"
#include "zcommon.acs"

// The opening text for players
script "HackDoom Welcome" OPEN 
{
    Log(s:"Welcome to Hack Doom, prepare yourself!");
}

// This script allows Hackdoors to function.
// Hackdoor:  Tag of the sector of the Hackdoor
script "HackDoom OpenHackdoor" (int Hackdoor) net
{
   Door_Open(Hackdoor, 10);
}

// This script allows spawning of enemies at given spawners in a level
// Spawner:  tag number of the MapSpot (form is: <1-9 for Hackdoor area>1>)
// MonstType:  spawn number of the monster to spawn
// MonstID:  normally not used
script "HackDoom SpawnEnemy" (int Spawner, int MonstType, int Fog, int MonstID) net
{
	// Set default MonstID to zero if one is not specified
	if (!MonstID)
	{
		MonstID = 0;
	}
	
	// Set default Fog to zero if one is not specified
	if (!Fog)
	{
		Fog = 0;
	}
	
	Thing_SpawnFacing(Spawner, MonstType, Fog, MonstID);
}

// This script allows spawning of PowerUps at given spawners in a level
// Spawner:  tag number of the MapSpot (form is: <1-9 for Hackdoor area>0)
// PowerUpType:  spawn number of the item to spawn
script "HackDoom SpawnPowerUp" (int Spawner, int PowerUpType) net
{
	Thing_SpawnFacing(Spawner, PowerUpType, 0, 999);
}

// This script allows lowering Hacklifts
script "HackDoom LowerHacklift" (int Hacklift, int Wait) net
{
	// Set default Wait to three seconds if one is not specified
	if (!Wait)
	{
		Wait = 90;
	}
	
	Plat_DownWaitUpStay(Hacklift, 10, Wait);
}

// This script allows raising Hacklifts
script "HackDoom RaiseHacklift" (int Hacklift, int Wait) net
{
	// Set default Wait to three seconds if one is not specified
	if (!Wait)
	{
		Wait = 90;
	}
	
	Plat_UpWaitDownStay(Hacklift, 10, Wait);
}

// This announces when a Hackswitch has been flipped
script 1 (int areanum)
{
  // PrintBold(s:"Area ", d: areanum, s:" Hackswitch activated!");
  Log(s:"Area ", d: areanum, s:" Hackswitch activated!");
}
